<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task-3.0.xsd
           http://www.springframework.org/schema/cache
           http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- Scan the the domain package for Spring repositories and services-->
	<context:component-scan base-package="com.sellar.managment" /> 
	
	

	<context:annotation-config/>
	<task:annotation-driven />
	
	<cache:annotation-driven />
	
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
	p:cacheManager-ref="ehcache" />

	<bean id="ehcache"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/> 

	<bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

	<bean class="com.sellar.managment.fms.util.ApplicationProperties">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="locations">
			<list>
				<value>classpath:/application.properties</value>
			</list>
		</property>
	</bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	</bean>
 	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url"
			value="${jdbc.databaseurl}/${jdbc.databaseName}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
            <list>
                <value>com.sellar.managment.fms</value>
                <value>com.sellar.managment.medicine</value>
            </list>
        </property>
        
		<property name="hibernateProperties">
			<props>
				
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.use.secondlevel.cache}</prop>
				<!--  <prop key="hibernate.cache.region.factory_class">${hibernate.cache.regionfactory}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.providerclass}</prop> 
				<prop key="hibernate.cache.use_query_cache">${hibernate.use.querycache}</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.cahe.provider.configurationfile}</prop>
				-->
				<prop key="hibernate.show_sql">${hibernate.showsql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generatestatistics}</prop>
				
				<prop key="hibernate.format_sql">${hibernate.formatsql}</prop>
				<prop key="hibernate.cache.use_structured_entries">${hibernate.use.structuredentries}</prop>
				<prop key="hibernate.validator.apply_to_ddl">${hibernate.validator.ddl}</prop> 
				<prop key="hibernate.validator.autoregister_listeners">${hibernate.validator.autoregister}</prop>
				
			</props>
		</property>
	</bean>
	 <bean id="hibernateTemplate"
          class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
	<tx:annotation-driven />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

</beans>